---
# Install pyenv and the default python version

- name: Install python build prerequisites
  apt: name={{item}} state=installed
  with_items:
       - make
       - build-essential
       - libssl-dev
       - zlib1g-dev
       - libbz2-dev
       - libreadline-dev
       - libsqlite3-dev
       - wget
       - curl
       - llvm
       - libncurses5-dev
       - libncursesw5-dev
       - xz-utils

- name: Ensure git is installed and the latest version
  apt:
    name: git
    state: present

- name: Install pyenv repository
  git:
    repo: 'https://github.com/pyenv/pyenv.git'
    dest: /usr/local/pyenv

- name: Check for the default python
  shell: |
    export PYENV_ROOT="/usr/local/pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    pyenv versions | awk '{print $1}'
  register: pyenv_installed
  changed_when: false

- name: Install the default python
  shell: |
    export PYENV_ROOT="/usr/local/pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    pyenv install {{ default_python }}
  when: "\"{{ default_python }}\" not in {{ pyenv_installed.stdout_lines }}"

- name: Check default python packages are up to date
  shell: |
    export PYENV_ROOT="/usr/local/pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    pyenv shell {{ default_python }}
    pip list -u --format=legacy | awk '{print $1}'
  register: pyenv_packages
  changed_when: false

- name: Update or install missing or outdated default python packages
  shell: |
    export PYENV_ROOT="/usr/local/pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    pyenv shell {{ default_python }}
    pip install -U {{ item }}
  with_items: "{{ default_python_packages }}" 
  when: item not in {{ pyenv_packages.stdout_lines }}
